C51 COMPILER V9.00   8KEY                                                                  03/10/2019 10:28:45 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE 8KEY
OBJECT MODULE PLACED IN 8KEY.OBJ
COMPILER INVOKED BY: E:\Keil4\C51\BIN\C51.EXE 8KEY.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*********************************************************************************************
   2          描述：  8 键电子琴 C 程序
   3          硬件：  STC12C2052AD，12MHz
   4          日期：  2019-03-09
   5          作者：  王锴
   6          邮件：  wangkai.geo@qq.com
   7          网站：  https://geokylin.github.io
   8          版本：
   9          　　V1.0 - 算法构建，注释
  10          /*********************************************************************************************/
  11          
  12          #include <STC12C2052AD.H> //STC12C2052AD单片机头文件，由STC-ISP软件导出
  13          #define STATUS P1 //所有按键的状态，8个按键使用第1组I/O引脚P1，每组I/O接口有8个引脚0-7
  14          
  15          sbit SPEAKER = P3^7; //扬声器在引脚P3.7
  16          unsigned char KEY; //被按下的按键，0-7
  17          unsigned char tTH0; //16位计时器的高8位，用于传递给中断函数
  18          unsigned char tTL0; //16位计时器的低8位，用于传递给中断函数
  19          unsigned int code music[]={ //十二平均律音符数组，code关键字定义数组的存储位置是程序存储器
  20          64021,64103,64260,64400, //e1, f1, g1, a1
  21          64524,64580,64684,64777, //b1, c2, d2, e2
  22          64820,64898,64968,65030, //f2, g2, a2, b2
  23          65058,65110,65157,65178  //c3, d3, e3, f3
  24          };
  25          
  26          // 主函数
  27          void main(void){
  28   1              TMOD=0x01; //设置定时器T0的模式为16位定时器
  29   1              ET0=1; //允许定时器T0中断
  30   1              EA=1; //设置CPU开放中断，总中断开关
  31   1              STATUS = 0xff; //将所有引脚电位设置为高电位1
  32   1              while(1){
  33   2                      if(STATUS != 0xff){ //有按键接通情况下
  34   3                              switch (~STATUS){ //判断接通的按键，按键接通的引脚为低电位0，其反状态为1
  35   4                                      case 0x01: //仅接通P1.0，STATUS的8个位的反状态为 0000 0001
  36   4                                              KEY = 7; //音高为 e2
  37   4                                              break;
  38   4                                      case 0x02: //仅接通P1.1，STATUS的8个位的反状态为 0000 0010
  39   4                                              KEY = 6; //音高为 d2
  40   4                                              break;
  41   4                                      case 0x04: //仅接通P1.2，STATUS的8个位的反状态为 0000 0100
  42   4                                              KEY = 5; //音高为 c2
  43   4                                              break;
  44   4                                      case 0x08: //仅接通P1.3，STATUS的8个位的反状态为 0000 1000
  45   4                                              KEY = 4; //音高为 b1
  46   4                                              break;
  47   4                                      case 0x10: //仅接通P1.4，STATUS的8个位的反状态为 0001 0000
  48   4                                              KEY = 3; //音高为 a1
  49   4                                              break;
  50   4                                      case 0x20: //仅接通P1.5，STATUS的8个位的反状态为 0010 0000
  51   4                                              KEY = 2; //音高为 g1
  52   4                                              break;
  53   4                                      case 0x40: //仅接通P1.6，STATUS的8个位的反状态为 0100 0000
  54   4                                              KEY = 1; //音高为 f1
  55   4                                              break;
C51 COMPILER V9.00   8KEY                                                                  03/10/2019 10:28:45 PAGE 2   

  56   4                                      case 0x80: //仅接通P1.7，STATUS的8个位的反状态为 1000 0000
  57   4                                              KEY = 0; //音高为 e1
  58   4                                              break;
  59   4                              }
  60   3              tTH0=music[KEY]/256; //取music数组中音高KEY对应的数的16进制的高8位
  61   3              tTL0=music[KEY]%256; //取music数组中音高KEY对应的数的16进制的低8位
  62   3              TR0=1; //开启定时器T0
  63   3                      }else{ //没有按键接通的情况下
  64   3              SPEAKER = 1; //设置P3.7为高电位，扬声器不发声
  65   3                              TR0=0; //关闭定时器T0
  66   3                      }
  67   2              }
  68   1      }
  69          
  70          //定时器T0的中断函数
  71          void t0(void) interrupt 1 using 0{ //interrupt 1指明是定时器T0的中断函数，using 0表示是用第0组寄存器
  72   1        TH0=tTH0; //设置定时器T0的高8位
  73   1        TL0=tTL0; //设置定时器T0的低8位
  74   1        SPEAKER=~SPEAKER; //设置P3.7为低电位，发声
  75   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    134    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
